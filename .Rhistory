#Created by Nyssa Silbiger 03/28/2014
#modified 20180627 Hollie Putnam
#new acid bottle 20180712 Emma Strand
#line 68 changed SampleID to Sample.ID - Sam Gurr 20180713
#
#------------------------------------------------------------
rm(list=ls())
setwd("C:/Users/PPP Lab/Documents\TA")
#setwd("~/MyProjects/UW_TA_2016/RAnalysis/")
main<-getwd()
#load libraries----------------------------------------------
library(seacarb) #used to calculate TA
library(tidyverse)
#load libraries----------------------------------------------
install.packages("seacarb")
#------------------------------------------------------------
rm(list=ls()) # sweep environment
setwd("C:/Users/PPP Lab/Documents/Titrator")
setwd("~/MyProjects/Putnam_Lab/Titrator")
main<-getwd()
getwd()
#load libraries----------------------------------------------
library(seacarb) #used to calculate TA
library(tidyverse)
package_version(seacarb)
#load libraries----------------------------------------------
library(seacarb) #used to calculate TA
package_version(seacarb)
#load libraries----------------------------------------------
library(seacarb) #used to calculate TA
library(tidyverse)
install.packages(seacarb)
library("seacarb", lib.loc="~/R/win-library/3.5")
install.packages("seacarb")
#load libraries----------------------------------------------
library(seacarb) #used to calculate TA
package_version(seacarb)
package_version("seacarb")
package_version('seacarb')
library(tidyverse)
#CHANGE THESE VALUES EVERY DAY----------------------------------------------
path<-"Data/E5_Titrations/20220729_E5_2020_LHZ" #the location of all your titration files, your folder of the day!
massfile<-"Mass_E5_CRM_20220729_LZ.csv" # name of your file with masses
titrationfile<-'20220729_E5_CRM_LZ.csv'# name of the last titration file run
# Date that the data were run
date<-'20220729'
Mass<-read.csv(file.path(path,massfile), header=T, sep=",", na.string="NA", as.is=T)
#CHANGE THESE VALUES EVERY DAY----------------------------------------------
path<-"Data/E5_Titrations/20220729_E5_2020_LHZ" #the location of all your titration files, your folder of the day!
#CHANGE THESE VALUES EVERY DAY----------------------------------------------
path<-"Data/E5_Titrations/E5_2020_Calcification_Samples/20220729_E5_2020_LHZ/" #the location of all your titration files, your folder of the day!
#CHANGE THESE VALUES EVERY DAY----------------------------------------------
path<-"Data/E5_Titrations/E5_2020_Calcification_Samples/20220729_E5_2020_LHZ/" #the location of all your titration files, your folder of the day!
massfile<-"20220729_E5_CRM_LZ.csv"  #name of the mass file
massfile<-"Mass_E5_CRM_20220729.csv"  #name of the mass file
titrationfile<-'20220729_E5_CRM_LZ.csv'# name of the last titration file run
# Date that the data were run
date<-'20220729'
Mass<-read.csv(file.path(path,massfile), header=T, sep=",", na.string="NA", as.is=T)
pHCal<-read.csv("Data/pHCalibration.csv") # read in the pH Calibration file
pHData<-pHCal[pHCal$Date==date,]
mod.pH<-lm(c(pHData$pH4, pHData$pH7, pHData$pH10)~c(4,7,10)) # linear model
png(paste0(path,"/",Sys.Date(),'pHmvplot.png'), height = 400, width = 400)
plot(c(4,7,10), c(pHData$pH4, pHData$pH7, pHData$pH10), xlab = 'pH', ylab = 'mv')
lines(c(4,7,10), predict(mod.pH))
R2<-summary(mod.pH)$r.squared
legend('topright', legend = bquote(R^2 == .(format(R2, digits = 3))), bty='n')
dev.off()
pH35<-mod.pH$coefficients[1]+mod.pH$coefficients[2]*3.5
pH3<-mod.pH$coefficients[1]+mod.pH$coefficients[2]*3
nrows<-nrow(Mass) #need file length/number of rows
TA <- data.frame(matrix(nrow = nrows, ncol = 4))
rownames(TA)<-Mass$Sample.ID1[1:nrows]
colnames(TA)<-c("SampleID",'TA','Mass','Salinity') # changed Sample.ID1 to SampleID in the TA data frame only
filename<-file.path(path,titrationfile)
AllData<-read.csv(filename, sep=",", na.string="NA", as.is=T, skip=4)[ ,1:5]
#Identifies rows starting with scope in column 1 of the titration file
sample_name_positions <- c(1,grep("^Scope", AllData[,1]), nrow(AllData))
## parse through all the data in the one file ###
sample_names<-Mass$Sample.ID1
# create a list with all the sample IDs
sample_names_list <- list()
for (item in 1:length(sample_names)){
sample_names_list[[item]] <- sample_names[item]
}
# fill the list with the data from each sample
for (i in 1:nrows){
sample_names_list[[i]]<-data.frame(AllData[sample_name_positions[i]:sample_name_positions[i+1],])
colnames(sample_names_list[[i]])<-c("Volume","Time","mV","Temperature","dV/dt")
}
for(i in 1:nrows) {
#  Data<-read.csv(file.names[i], header=F, sep=",", na.string="NA",as.is=T, skip=10)[ ,1:5]
# colnames(Data) <-  c("Volume","Time",	"mV",	"Temperature",	"dV/dt")
Data<-sample_names_list[[i]]
# everything was brought in as a character because of the second line, converts back to numeric
Data$mV<-suppressWarnings(as.numeric(Data$mV)) ## supress the warnings since NA will be produced
Data$Temperature<-suppressWarnings(as.numeric(Data$Temperature))
Data$Volume<-suppressWarnings(as.numeric(Data$Volume))
#name of the file without .csv
#name<-unlist(strsplit(file.names[i], split='.', fixed=TRUE))[1]
name<-sample_names[i]
#calculates the index of values between pH 2 and 3.5
mV<-which(Data$mV<pH3 & Data$mV>pH35)
#CHANGE ONLY WHEN NEW BOTTLE OF ACID IS USED----------------------------------
#density of your titrant: change every time acid is changed
#Batch A16 changed on 20190731 by SJG, SIlbiger used same batch
#d<-(-0.00000410*mean(Data$Temperature[mV], na.rm=T)^2-0.0001065*mean(Data$Temperature[mV], na.rm=T)+1.02884) #20190731 Batch A16
#Danielle Becker updated script and changed acid to new batch #A22 on 20220127
d<-(-0.00000400*mean(Data$Temperature[mV], na.rm=T)^2-0.0001116*mean(Data$Temperature[mV], na.rm=T)+1.02881) #20220127 Batch A22 DMBP
#concentration of your titrant: CHANGE EVERYTIME ACID IS CHANGED
#c<-0.100010 ##Batch A16 first used by SJG on 20190731
c<-0.100347 ##Batch A22 first used by DMBP on 20220127
#------------------------------------------------------------------------------
#Salinity of your samples, set salinity for all titrations using a junk or CRM (single value)
s<-Mass[Mass$Sample.ID1==name,3]
#s<-Mass[name,2]
#mass of sample in g: changed with every sample
#mass<-Mass[name,1]
mass<-Mass[Mass$Sample.ID1==name,2]
#sample.index<-Mass[Mass$Sample.ID1==name,3]# this is the order that the sample was run
#-------------------------------------------------------------------
#Calculate TA
#at function is based on code in saecarb package by Steeve Comeau, Heloise Lavigne and Jean-Pierre Gattuso
TA[i,1]<-name #exports the sample ID into output file, column 1
TA[i,2]<-1000000*at(S=s,T=mean(Data$Temperature[mV], na.rm=T), C=c, d=d, pHTris=NULL, ETris=NULL, weight=mass, E=Data$mV[mV], volume=Data$Volume[mV])
TA[i,3]<-mass #exports the mass into the TA output file, column 3
TA[i,4]<-s #exports the salinity column into the output file, column 4
}
TA[,2:3]<-sapply(TA[,2:3], as.numeric) # make sure the appropriate columns are numeric
#exports your data as a CSV file
write.table(TA,paste0(path,"/","TA_Output_",titrationfile),sep=",", row.names=FALSE)
#load libraries----------------------------------------------
install_version("seacarb", version = "3.2.1", repos = "http://cran.us.r-project.org")
#load libraries----------------------------------------------
require(devtools)
install_version("seacarb", version = "3.2.1", repos = "http://cran.us.r-project.org")
#load libraries----------------------------------------------
library(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
#load libraries----------------------------------------------
library(devtools)
install_version("seacarb", version = "3.2.2", repos = "http://cran.us.r-project.org")
install.packages("C:/Users/PPP Lab/Downloads/seacarb_3.2.2.tar.gz", repos = NULL, type = "source")
library(tidyverse)
#CHANGE THESE VALUES EVERY DAY----------------------------------------------
path<-"Data/E5_Titrations/E5_2020_Calcification_Samples/20220729_E5_2020_LHZ/" #the location of all your titration files, your folder of the day!
massfile<-"Mass_E5_CRM_20220729.csv"  #name of the mass file
titrationfile<-'20220729_E5_CRM_LZ.csv'# name of the last titration file run
# Date that the data were run
date<-'20220729'
Mass<-read.csv(file.path(path,massfile), header=T, sep=",", na.string="NA", as.is=T)
pHCal<-read.csv("Data/pHCalibration.csv") # read in the pH Calibration file
pHData<-pHCal[pHCal$Date==date,]
mod.pH<-lm(c(pHData$pH4, pHData$pH7, pHData$pH10)~c(4,7,10)) # linear model
png(paste0(path,"/",Sys.Date(),'pHmvplot.png'), height = 400, width = 400)
plot(c(4,7,10), c(pHData$pH4, pHData$pH7, pHData$pH10), xlab = 'pH', ylab = 'mv')
lines(c(4,7,10), predict(mod.pH))
R2<-summary(mod.pH)$r.squared
legend('topright', legend = bquote(R^2 == .(format(R2, digits = 3))), bty='n')
dev.off()
pH35<-mod.pH$coefficients[1]+mod.pH$coefficients[2]*3.5
pH3<-mod.pH$coefficients[1]+mod.pH$coefficients[2]*3
nrows<-nrow(Mass) #need file length/number of rows
TA <- data.frame(matrix(nrow = nrows, ncol = 4))
rownames(TA)<-Mass$Sample.ID1[1:nrows]
colnames(TA)<-c("SampleID",'TA','Mass','Salinity') # changed Sample.ID1 to SampleID in the TA data frame only
filename<-file.path(path,titrationfile)
AllData<-read.csv(filename, sep=",", na.string="NA", as.is=T, skip=4)[ ,1:5]
#Identifies rows starting with scope in column 1 of the titration file
sample_name_positions <- c(1,grep("^Scope", AllData[,1]), nrow(AllData))
## parse through all the data in the one file ###
sample_names<-Mass$Sample.ID1
# create a list with all the sample IDs
sample_names_list <- list()
for (item in 1:length(sample_names)){
sample_names_list[[item]] <- sample_names[item]
}
# fill the list with the data from each sample
for (i in 1:nrows){
sample_names_list[[i]]<-data.frame(AllData[sample_name_positions[i]:sample_name_positions[i+1],])
colnames(sample_names_list[[i]])<-c("Volume","Time","mV","Temperature","dV/dt")
}
for(i in 1:nrows) {
#  Data<-read.csv(file.names[i], header=F, sep=",", na.string="NA",as.is=T, skip=10)[ ,1:5]
# colnames(Data) <-  c("Volume","Time",	"mV",	"Temperature",	"dV/dt")
Data<-sample_names_list[[i]]
# everything was brought in as a character because of the second line, converts back to numeric
Data$mV<-suppressWarnings(as.numeric(Data$mV)) ## supress the warnings since NA will be produced
Data$Temperature<-suppressWarnings(as.numeric(Data$Temperature))
Data$Volume<-suppressWarnings(as.numeric(Data$Volume))
#name of the file without .csv
#name<-unlist(strsplit(file.names[i], split='.', fixed=TRUE))[1]
name<-sample_names[i]
#calculates the index of values between pH 2 and 3.5
mV<-which(Data$mV<pH3 & Data$mV>pH35)
#CHANGE ONLY WHEN NEW BOTTLE OF ACID IS USED----------------------------------
#density of your titrant: change every time acid is changed
#Batch A16 changed on 20190731 by SJG, SIlbiger used same batch
#d<-(-0.00000410*mean(Data$Temperature[mV], na.rm=T)^2-0.0001065*mean(Data$Temperature[mV], na.rm=T)+1.02884) #20190731 Batch A16
#Danielle Becker updated script and changed acid to new batch #A22 on 20220127
d<-(-0.00000400*mean(Data$Temperature[mV], na.rm=T)^2-0.0001116*mean(Data$Temperature[mV], na.rm=T)+1.02881) #20220127 Batch A22 DMBP
#concentration of your titrant: CHANGE EVERYTIME ACID IS CHANGED
#c<-0.100010 ##Batch A16 first used by SJG on 20190731
c<-0.100347 ##Batch A22 first used by DMBP on 20220127
#------------------------------------------------------------------------------
#Salinity of your samples, set salinity for all titrations using a junk or CRM (single value)
s<-Mass[Mass$Sample.ID1==name,3]
#s<-Mass[name,2]
#mass of sample in g: changed with every sample
#mass<-Mass[name,1]
mass<-Mass[Mass$Sample.ID1==name,2]
#sample.index<-Mass[Mass$Sample.ID1==name,3]# this is the order that the sample was run
#-------------------------------------------------------------------
#Calculate TA
#at function is based on code in saecarb package by Steeve Comeau, Heloise Lavigne and Jean-Pierre Gattuso
TA[i,1]<-name #exports the sample ID into output file, column 1
TA[i,2]<-1000000*at(S=s,T=mean(Data$Temperature[mV], na.rm=T), C=c, d=d, pHTris=NULL, ETris=NULL, weight=mass, E=Data$mV[mV], volume=Data$Volume[mV])
TA[i,3]<-mass #exports the mass into the TA output file, column 3
TA[i,4]<-s #exports the salinity column into the output file, column 4
}
TA[,2:3]<-sapply(TA[,2:3], as.numeric) # make sure the appropriate columns are numeric
install.packages("C:/Users/PPP Lab/Downloads/seacarb_3.2.tar.gz", repos = NULL, type = "source")
nrows<-nrow(Mass) #need file length/number of rows
TA <- data.frame(matrix(nrow = nrows, ncol = 4))
rownames(TA)<-Mass$Sample.ID1[1:nrows]
colnames(TA)<-c("SampleID",'TA','Mass','Salinity') # changed Sample.ID1 to SampleID in the TA data frame only
filename<-file.path(path,titrationfile)
AllData<-read.csv(filename, sep=",", na.string="NA", as.is=T, skip=4)[ ,1:5]
#Identifies rows starting with scope in column 1 of the titration file
sample_name_positions <- c(1,grep("^Scope", AllData[,1]), nrow(AllData))
## parse through all the data in the one file ###
sample_names<-Mass$Sample.ID1
# create a list with all the sample IDs
sample_names_list <- list()
for (item in 1:length(sample_names)){
sample_names_list[[item]] <- sample_names[item]
}
# fill the list with the data from each sample
for (i in 1:nrows){
sample_names_list[[i]]<-data.frame(AllData[sample_name_positions[i]:sample_name_positions[i+1],])
colnames(sample_names_list[[i]])<-c("Volume","Time","mV","Temperature","dV/dt")
}
for(i in 1:nrows) {
#  Data<-read.csv(file.names[i], header=F, sep=",", na.string="NA",as.is=T, skip=10)[ ,1:5]
# colnames(Data) <-  c("Volume","Time",	"mV",	"Temperature",	"dV/dt")
Data<-sample_names_list[[i]]
# everything was brought in as a character because of the second line, converts back to numeric
Data$mV<-suppressWarnings(as.numeric(Data$mV)) ## supress the warnings since NA will be produced
Data$Temperature<-suppressWarnings(as.numeric(Data$Temperature))
Data$Volume<-suppressWarnings(as.numeric(Data$Volume))
#name of the file without .csv
#name<-unlist(strsplit(file.names[i], split='.', fixed=TRUE))[1]
name<-sample_names[i]
#calculates the index of values between pH 2 and 3.5
mV<-which(Data$mV<pH3 & Data$mV>pH35)
#CHANGE ONLY WHEN NEW BOTTLE OF ACID IS USED----------------------------------
#density of your titrant: change every time acid is changed
#Batch A16 changed on 20190731 by SJG, SIlbiger used same batch
#d<-(-0.00000410*mean(Data$Temperature[mV], na.rm=T)^2-0.0001065*mean(Data$Temperature[mV], na.rm=T)+1.02884) #20190731 Batch A16
#Danielle Becker updated script and changed acid to new batch #A22 on 20220127
d<-(-0.00000400*mean(Data$Temperature[mV], na.rm=T)^2-0.0001116*mean(Data$Temperature[mV], na.rm=T)+1.02881) #20220127 Batch A22 DMBP
#concentration of your titrant: CHANGE EVERYTIME ACID IS CHANGED
#c<-0.100010 ##Batch A16 first used by SJG on 20190731
c<-0.100347 ##Batch A22 first used by DMBP on 20220127
#------------------------------------------------------------------------------
#Salinity of your samples, set salinity for all titrations using a junk or CRM (single value)
s<-Mass[Mass$Sample.ID1==name,3]
#s<-Mass[name,2]
#mass of sample in g: changed with every sample
#mass<-Mass[name,1]
mass<-Mass[Mass$Sample.ID1==name,2]
#sample.index<-Mass[Mass$Sample.ID1==name,3]# this is the order that the sample was run
#-------------------------------------------------------------------
#Calculate TA
#at function is based on code in saecarb package by Steeve Comeau, Heloise Lavigne and Jean-Pierre Gattuso
TA[i,1]<-name #exports the sample ID into output file, column 1
TA[i,2]<-1000000*at(S=s,T=mean(Data$Temperature[mV], na.rm=T), C=c, d=d, pHTris=NULL, ETris=NULL, weight=mass, E=Data$mV[mV], volume=Data$Volume[mV])
TA[i,3]<-mass #exports the mass into the TA output file, column 3
TA[i,4]<-s #exports the salinity column into the output file, column 4
}
